{"version":3,"sources":["../src/utils/environment.ts"],"names":["getEnvironment","key","defaultValue","process","env","environment","NODE_ENV","GIT_SHA","DOPPLER_ENVIRONMENT","DEMO","JWT_SECRET","LOCAL","DEV","TEST","PROD","DATABASE_URL","DATABASE_URL_TEST","MONGO_DATABASE_URL","MONGO_DATABASE_URL_TEST","DATABASE_PROXY_URL","DATABASE_READ_REPLICA_URL","AWS_REGION","GOOGLE_APPLICATION_CREDENTIALS","Buffer","from","toString","GOOGLE_PLACE_API_KEY","S3_PUBLIC_BUCKET_NAME","S3_PRIVATE_BUCKET_NAME","BIND_USERNAME","BIND_PASSWORD","MATI_CLIENT_ID","MATI_CLIENT_SECRET","MATI_FLOW_ID","MATI_WEBHOOK_SECRET","BITCOIN_SEEDPHRASE","ETHEREUM_SEEDPHRASE","TRON_SEEDPHRASE","QUANTIA_USERNAME","QUANTIA_PASSWORD","QUANTIA_MFA_SECRET","QUANTIA_API_URL","TRANSACTION_QUEUE","OKEX_PASSPHRASE","OKEX_API_KEY","OKEX_SECRET_KEY","OKEX_TRADE_PASSWORD","OKEX_DEMO","OKEX_BROKER_CODE","OKEX_TRADING_PASSPHRASE","OKEX_TRADING_API_KEY","OKEX_TRADING_SECRET_KEY","OKEX_ND_SUBACCOUNT_NAME","DECRYPTO_USERNAME","DECRYPTO_PASSWORD","BIND_BASE_URL","BIND_PROXY_URL","BIND_PROXY_USERNAME","BIND_PROXY_PASSWORD","MATI_EMAIL","MATI_PASSWORD","POMELO_API_URL","POMELO_API_CLIENT_ID","POMELO_API_CLIENT_SECRET","POMELO_API_AUDIENCE_URL","POMELO_API_KEY","POMELO_SFTP_USER","POMELO_SFTP_HOST","POMELO_SFTP_PASSPHRASE","POMELO_SFTP_PRIVATE_KEY","BELO_S3_PRIVATE_CONCILIATION_BUCKET","POMELO_API_SECRET","REDIS_URL","AGILPAGOS_URL","AGILPAGOS_ID_ENTIDAD","AGILPAGOS_USERNAME","AGILPAGOS_PASSWORD","AGILPAGOS_API_KEY","AGILPAGOS_API_ID","AGILPAGOS_BELO_CUSTOMER_ID","COINAG_PROXY_URL","COINAG_PROXY_USERNAME","COINAG_PROXY_PASSWORD","COINAG_USERNAME","COINAG_PASSWORD","COINAG_CLIENT_ID","COINAG_CLIENT_SECRET","COINAG_DEBIN_CLIENT_ID","COINAG_DEBIN_CLIENT_SECRET","COINAG_DEBIN_API_PATH","COINAG_PSP_ID","COINAG_PSP_CUIT","COINAG_ACCOUNT_ID","COINAG_API_PATH","COINAG_WHITELIST_IPS","JSON","stringify","OPENNODE_KEY","OPENNODE_DEPOSIT_WEBHOOK","OPENNODE_WITHDRAWAL_WEBHOOK","MAIN_MATI_FLOW_ID","FOREIGN_MATI_FLOW_ID","APP_STORE_URL","SERVER_BASE_URL","DASHBOARD_BASE_URL","WEB_APP_BASE_URL","REFERRAL_BASE_URL","ADJUST_URL","ADJUST_TOKEN","ADJUST_APP_TOKEN","NEW_RELIC_LICENSE_KEY","FIREHOSE_STREAM","AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY","BONSAI_USER","BONSAI_PASSWORD","FUSION_AUTH_URL","FUSION_AUTH_API_KEY","FUSION_AUTH_TENANT_DASHBOARD","FUSION_AUTH_TENANT_APP","FUSION_AUTH_TENANT_API_V1","FUSION_AUTH_APPLICATION_DASHBOARD","FUSION_AUTH_APPLICATION_APP","FUSION_AUTH_APP_JWT_SECRET","FUSION_AUTH_DASHBOARD_JWT_SECRET","FUSION_AUTH_API_V1_ENTITY","FUSION_AUTH_API_V1_JWT_SECRET","REDIS_CACHE_URL","QR_RESOLVER_TOKEN","LINK_CLIENT_URL","LINK_CLIENT_SECRET","LINK_CLIENT_ID","INFLUX_TOKEN","BIGQUERY_CREDENTIALS","RAPIBOY_API_URL","RAPIBOY_LOGIN_TOKEN","TAP_LOGIN_PATH","TAP_LOGIN_API_KEY","TAP_COMPANIES_PATH","TAP_COMPANIES_API_KEY","TAP_SERVICES_PATH","TAP_SERVICES_API_KEY","TAP_RECHARGE_API_KEY","TAP_RECHARGE_PATH","TAP_USERNAME","TAP_PASSWORD","EXPO_ACCESS_TOKEN","TAP_SFTP_USER","TAP_SFTP_HOST","TAP_SFTP_PASSPHRASE","TAP_SFTP_PRIVATE_KEY","CELERI_CLIENT_ID","CELERI_CLIENT_SECRET","CELERI_API_URL","LOKI_USER","LOKI_PASSWORD","LOKI_HOST","OTLP_TRACE_EXPORTER_URL","CRYPTO_YA_BASE_URL","DECRYPTO_BASE_URL","GOOGLE_API_BASE_URL","OKEX_BASE_URL","DISABLE_TRACE","extendSharedEnvironment","packageEnvironment"],"mappings":"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","sourcesContent":["export function getEnvironment<T = string>(key: string, defaultValue?: T): T {\n  return (process.env[key] ?? defaultValue ?? \"\") as T;\n}\n\nexport const environment = {\n  NODE_ENV: getEnvironment(\"NODE_ENV\", \"development\"),\n  GIT_SHA: getEnvironment(\"GIT_SHA\"),\n  DOPPLER_ENVIRONMENT: getEnvironment(\"DOPPLER_ENVIRONMENT\", \"development\"),\n  DEMO: getEnvironment(\"DEMO\") === \"true\",\n  JWT_SECRET: getEnvironment(\"JWT_SECRET\", \"secret\"),\n  LOCAL: false,\n  DEV: false,\n  TEST: false,\n  PROD: false,\n  DATABASE_URL: getEnvironment(\n    \"DATABASE_URL\",\n    \"postgres://postgres:postgres@localhost:5432/belo?sslmode=disable\"\n  ),\n  DATABASE_URL_TEST: getEnvironment(\n    \"DATABASE_URL_TEST\",\n    \"postgres://postgres:postgres@localhost:5432/belo_test\"\n  ),\n  MONGO_DATABASE_URL: getEnvironment(\n    \"MONGO_DATABASE_URL\",\n    \"mongodb://mongouser:mongopass@localhost:27017/belo_local?authSource=admin\"\n  ),\n  MONGO_DATABASE_URL_TEST: getEnvironment(\n    \"MONGO_DATABASE_URL_TEST\",\n    \"mongodb://mongouser:mongopass@localhost:27017/belo_test\"\n  ),\n  DATABASE_PROXY_URL: getEnvironment(\n    \"DATABASE_PROXY_URL\",\n    \"postgres://postgres:postgres@localhost:5432/belo?sslmode=disable\"\n  ),\n  DATABASE_READ_REPLICA_URL: getEnvironment(\n    \"DATABASE_READ_REPLICA_URL\",\n    \"postgres://postgres:postgres@localhost:5432/belo?sslmode=disable\"\n  ),\n  AWS_REGION: getEnvironment(\"AWS_REGION\", \"us-east-2\"),\n  GOOGLE_APPLICATION_CREDENTIALS: Buffer.from(\n    getEnvironment<any>(\"GOOGLE_APPLICATION_CREDENTIALS\"),\n    \"base64\"\n  ).toString(\"utf8\"),\n  GOOGLE_PLACE_API_KEY: getEnvironment(\"GOOGLE_PLACE_API_KEY\", \"\"),\n  S3_PUBLIC_BUCKET_NAME: getEnvironment(\"S3_PUBLIC_BUCKET_NAME\", \"belo-assets\"),\n  S3_PRIVATE_BUCKET_NAME: getEnvironment(\n    \"S3_PRIVATE_BUCKET_NAME\",\n    \"belo-private-assets\"\n  ),\n  BIND_USERNAME: getEnvironment(\"BIND_USERNAME\", \"\"),\n  BIND_PASSWORD: getEnvironment(\"BIND_PASSWORD\", \"\"),\n  MATI_CLIENT_ID: getEnvironment(\"MATI_CLIENT_ID\", \"\"),\n  MATI_CLIENT_SECRET: getEnvironment(\"MATI_CLIENT_SECRET\", \"\"),\n  MATI_FLOW_ID: getEnvironment(\"MATI_FLOW_ID\", \"\"),\n  MATI_WEBHOOK_SECRET: getEnvironment(\"MATI_WEBHOOK_SECRET\", \"\"),\n  BITCOIN_SEEDPHRASE: getEnvironment(\n    \"BITCOIN_SEEDPHRASE\",\n    \"praise you muffin lion enable neck grocery crumble super myself license ghost\"\n  ),\n  ETHEREUM_SEEDPHRASE: getEnvironment(\n    \"ETHEREUM_SEEDPHRASE\",\n    \"praise you muffin lion enable neck grocery crumble super myself license ghost\"\n  ),\n  TRON_SEEDPHRASE: getEnvironment(\n    \"TRON_SEEDPHRASE\",\n    \"praise you muffin lion enable neck grocery pepe super myself license ghost\"\n  ),\n  QUANTIA_USERNAME: getEnvironment(\"QUANTIA_USERNAME\"),\n  QUANTIA_PASSWORD: getEnvironment(\"QUANTIA_PASSWORD\"),\n  QUANTIA_MFA_SECRET: getEnvironment(\"QUANTIA_MFA_SECRET\"),\n  QUANTIA_API_URL: getEnvironment(\"QUANTIA_API_URL\"),\n  TRANSACTION_QUEUE: getEnvironment(\"TRANSACTION_QUEUE\"),\n  OKEX_PASSPHRASE: getEnvironment(\"OKEX_PASSPHRASE\"),\n  OKEX_API_KEY: getEnvironment(\"OKEX_API_KEY\"),\n  OKEX_SECRET_KEY: getEnvironment(\"OKEX_SECRET_KEY\"),\n  OKEX_TRADE_PASSWORD: getEnvironment(\"OKEX_TRADE_PASSWORD\"),\n  OKEX_DEMO: getEnvironment(\"OKEX_DEMO\") === \"true\",\n  OKEX_BROKER_CODE: getEnvironment(\"OKEX_BROKER_CODE\"),\n  OKEX_TRADING_PASSPHRASE: getEnvironment(\"OKEX_TRADING_PASSPHRASE\"),\n  OKEX_TRADING_API_KEY: getEnvironment(\"OKEX_TRADING_API_KEY\"),\n  OKEX_TRADING_SECRET_KEY: getEnvironment(\"OKEX_TRADING_SECRET_KEY\"),\n  OKEX_ND_SUBACCOUNT_NAME: getEnvironment(\"OKEX_ND_SUBACCOUNT_NAME\"),\n  DECRYPTO_USERNAME: getEnvironment(\"DECRYPTO_USERNAME\"),\n  DECRYPTO_PASSWORD: getEnvironment(\"DECRYPTO_PASSWORD\"),\n  BIND_BASE_URL: getEnvironment(\"BIND_BASE_URL\"),\n  BIND_PROXY_URL: getEnvironment(\"BIND_PROXY_URL\"),\n  BIND_PROXY_USERNAME: getEnvironment(\"BIND_PROXY_USERNAME\"),\n  BIND_PROXY_PASSWORD: getEnvironment(\"BIND_PROXY_PASSWORD\"),\n  MATI_EMAIL: getEnvironment(\"MATI_EMAIL\"),\n  MATI_PASSWORD: getEnvironment(\"MATI_PASSWORD\"),\n  POMELO_API_URL: getEnvironment(\"POMELO_API_URL\"),\n  POMELO_API_CLIENT_ID: getEnvironment(\"POMELO_API_CLIENT_ID\"),\n  POMELO_API_CLIENT_SECRET: getEnvironment(\"POMELO_API_CLIENT_SECRET\"),\n  POMELO_API_AUDIENCE_URL: getEnvironment(\"POMELO_API_AUDIENCE_URL\"),\n  POMELO_API_KEY: getEnvironment(\"POMELO_API_KEY\"),\n  POMELO_SFTP_USER: getEnvironment(\"POMELO_SFTP_USER\"),\n  POMELO_SFTP_HOST: getEnvironment(\"POMELO_SFTP_HOST\"),\n  POMELO_SFTP_PASSPHRASE: getEnvironment(\"POMELO_SFTP_PASSPHRASE\"),\n  POMELO_SFTP_PRIVATE_KEY: getEnvironment(\"POMELO_SFTP_PRIVATE_KEY\"),\n  BELO_S3_PRIVATE_CONCILIATION_BUCKET: getEnvironment(\n    \"BELO_S3_PRIVATE_CONCILIATION_BUCKET\"\n  ),\n  POMELO_API_SECRET: getEnvironment(\"POMELO_API_SECRET\"),\n  REDIS_URL: getEnvironment(\"REDIS_URL\"),\n  AGILPAGOS_URL: getEnvironment(\"AGILPAGOS_URL\"),\n  AGILPAGOS_ID_ENTIDAD: getEnvironment(\"AGILPAGOS_ID_ENTIDAD\"),\n  AGILPAGOS_USERNAME: getEnvironment(\"AGILPAGOS_USERNAME\"),\n  AGILPAGOS_PASSWORD: getEnvironment(\"AGILPAGOS_PASSWORD\"),\n  AGILPAGOS_API_KEY: getEnvironment(\"AGILPAGOS_API_KEY\"),\n  AGILPAGOS_API_ID: getEnvironment(\"AGILPAGOS_API_ID\"),\n  AGILPAGOS_BELO_CUSTOMER_ID: getEnvironment(\"AGILPAGOS_BELO_CUSTOMER_ID\"),\n  COINAG_PROXY_URL: getEnvironment(\"COINAG_PROXY_URL\"),\n  COINAG_PROXY_USERNAME: getEnvironment(\"COINAG_PROXY_USERNAME\"),\n  COINAG_PROXY_PASSWORD: getEnvironment(\"COINAG_PROXY_PASSWORD\"),\n  COINAG_USERNAME: getEnvironment(\"COINAG_USERNAME\"),\n  COINAG_PASSWORD: getEnvironment(\"COINAG_PASSWORD\"),\n  COINAG_CLIENT_ID: getEnvironment(\"COINAG_CLIENT_ID\"),\n  COINAG_CLIENT_SECRET: getEnvironment(\"COINAG_CLIENT_SECRET\"),\n  COINAG_DEBIN_CLIENT_ID: getEnvironment(\"COINAG_DEBIN_CLIENT_ID\"),\n  COINAG_DEBIN_CLIENT_SECRET: getEnvironment(\"COINAG_DEBIN_CLIENT_SECRET\"),\n  COINAG_DEBIN_API_PATH: getEnvironment(\"COINAG_DEBIN_API_PATH\"),\n  COINAG_PSP_ID: getEnvironment(\"COINAG_PSP_ID\"),\n  COINAG_PSP_CUIT: getEnvironment(\"COINAG_PSP_CUIT\"),\n  COINAG_ACCOUNT_ID: getEnvironment(\"COINAG_ACCOUNT_ID\"),\n  COINAG_API_PATH: getEnvironment(\"COINAG_API_PATH\"),\n  COINAG_WHITELIST_IPS: getEnvironment(\n    \"COINAG_WHITELIST_IPS\",\n    JSON.stringify([])\n  ),\n  OPENNODE_KEY: getEnvironment(\"OPENNODE_KEY\"),\n  OPENNODE_DEPOSIT_WEBHOOK: getEnvironment(\"OPENNODE_DEPOSIT_WEBHOOK\"),\n  OPENNODE_WITHDRAWAL_WEBHOOK: getEnvironment(\"OPENNODE_WITHDRAWAL_WEBHOOK\"),\n  MAIN_MATI_FLOW_ID: getEnvironment(\"MAIN_MATI_FLOW_ID\"),\n  FOREIGN_MATI_FLOW_ID: getEnvironment(\"FOREIGN_MATI_FLOW_ID\"),\n  APP_STORE_URL: getEnvironment(\"APP_STORE_URL\", \"https://belo.app\"),\n  SERVER_BASE_URL: getEnvironment(\"SERVER_BASE_URL\", \"http://localhost:3000\"),\n  DASHBOARD_BASE_URL: getEnvironment(\n    \"DASHBOARD_BASE_URL\",\n    \"http://localhost:3000\"\n  ),\n  WEB_APP_BASE_URL: getEnvironment(\"WEB_APP_BASE_URL\", \"http://localhost:3000\"),\n  REFERRAL_BASE_URL: getEnvironment(\n    \"REFERRAL_BASE_URL\",\n    \"http://localhost:3000\"\n  ),\n  ADJUST_URL: getEnvironment(\"ADJUST_URL\"),\n  ADJUST_TOKEN: getEnvironment(\"ADJUST_TOKEN\"),\n  ADJUST_APP_TOKEN: getEnvironment(\"ADJUST_APP_TOKEN\"),\n  NEW_RELIC_LICENSE_KEY: getEnvironment(\"NEW_RELIC_LICENSE_KEY\"),\n  FIREHOSE_STREAM: getEnvironment(\"FIREHOSE_STREAM\"),\n  AWS_ACCESS_KEY_ID: getEnvironment(\"AWS_ACCESS_KEY_ID\"),\n  AWS_SECRET_ACCESS_KEY: getEnvironment(\"AWS_SECRET_ACCESS_KEY\"),\n  BONSAI_USER: getEnvironment(\"BONSAI_USER\"),\n  BONSAI_PASSWORD: getEnvironment(\"BONSAI_PASSWORD\"),\n  FUSION_AUTH_URL: getEnvironment(\"FUSION_AUTH_URL\"),\n  FUSION_AUTH_API_KEY: getEnvironment(\"FUSION_AUTH_API_KEY\"),\n  FUSION_AUTH_TENANT_DASHBOARD: getEnvironment(\"FUSION_AUTH_TENANT_DASHBOARD\"),\n  FUSION_AUTH_TENANT_APP: getEnvironment(\"FUSION_AUTH_TENANT_APP\"),\n  FUSION_AUTH_TENANT_API_V1: getEnvironment(\"FUSION_AUTH_TENANT_API_V1\"),\n  FUSION_AUTH_APPLICATION_DASHBOARD: getEnvironment(\n    \"FUSION_AUTH_APPLICATION_DASHBOARD\"\n  ),\n  FUSION_AUTH_APPLICATION_APP: getEnvironment(\"FUSION_AUTH_APPLICATION_APP\"),\n  FUSION_AUTH_APP_JWT_SECRET: getEnvironment(\n    \"FUSION_AUTH_APP_JWT_SECRET\",\n    \"no-app-secret\"\n  ),\n  FUSION_AUTH_DASHBOARD_JWT_SECRET: getEnvironment(\n    \"FUSION_AUTH_DASHBOARD_JWT_SECRET\",\n    \"no-app-secret\"\n  ),\n  FUSION_AUTH_API_V1_ENTITY: getEnvironment(\"FUSION_AUTH_API_V1_ENTITY\"),\n  FUSION_AUTH_API_V1_JWT_SECRET: getEnvironment(\n    \"FUSION_AUTH_API_V1_JWT_SECRET\",\n    \"no-app-secret\"\n  ),\n  REDIS_CACHE_URL: getEnvironment(\"REDIS_CACHE_URL\"),\n  QR_RESOLVER_TOKEN: getEnvironment(\"QR_RESOLVER_TOKEN\", JSON.stringify({})),\n  LINK_CLIENT_URL: getEnvironment(\"LINK_CLIENT_URL\"),\n  LINK_CLIENT_SECRET: getEnvironment(\"LINK_CLIENT_SECRET\"),\n  LINK_CLIENT_ID: getEnvironment(\"LINK_CLIENT_ID\"),\n  INFLUX_TOKEN: getEnvironment(\"INFLUX_TOKEN\"),\n  BIGQUERY_CREDENTIALS: Buffer.from(\n    getEnvironment<any>(\"BIGQUERY_CREDENTIALS\"),\n    \"base64\"\n  ).toString(\"utf8\"),\n  RAPIBOY_API_URL: getEnvironment(\"RAPIBOY_API_URL\"),\n  RAPIBOY_LOGIN_TOKEN: getEnvironment(\"RAPIBOY_LOGIN_TOKEN\"),\n  TAP_LOGIN_PATH: getEnvironment(\"TAP_LOGIN_PATH\"),\n  TAP_LOGIN_API_KEY: getEnvironment(\"TAP_LOGIN_API_KEY\"),\n  TAP_COMPANIES_PATH: getEnvironment(\"TAP_COMPANIES_PATH\"),\n  TAP_COMPANIES_API_KEY: getEnvironment(\"TAP_COMPANIES_API_KEY\"),\n  TAP_SERVICES_PATH: getEnvironment(\"TAP_SERVICES_PATH\"),\n  TAP_SERVICES_API_KEY: getEnvironment(\"TAP_SERVICES_API_KEY\"),\n  TAP_RECHARGE_API_KEY: getEnvironment(\"TAP_RECHARGE_API_KEY\"),\n  TAP_RECHARGE_PATH: getEnvironment(\"TAP_RECHARGE_PATH\"),\n  TAP_USERNAME: getEnvironment(\"TAP_USERNAME\"),\n  TAP_PASSWORD: getEnvironment(\"TAP_PASSWORD\"),\n  EXPO_ACCESS_TOKEN: getEnvironment(\"EXPO_ACCESS_TOKEN\"),\n  TAP_SFTP_USER: getEnvironment(\"TAP_SFTP_USER\"),\n  TAP_SFTP_HOST: getEnvironment(\"TAP_SFTP_HOST\"),\n  TAP_SFTP_PASSPHRASE: getEnvironment(\"TAP_SFTP_PASSPHRASE\"),\n  TAP_SFTP_PRIVATE_KEY: getEnvironment(\"TAP_SFTP_PRIVATE_KEY\"),\n  CELERI_CLIENT_ID: getEnvironment(\"CELERI_CLIENT_ID\"),\n  CELERI_CLIENT_SECRET: getEnvironment(\"CELERI_CLIENT_SECRET\"),\n  CELERI_API_URL: getEnvironment(\"CELERI_API_URL\"),\n  LOKI_USER: getEnvironment(\"LOKI_USER\"),\n  LOKI_PASSWORD: getEnvironment(\"LOKI_PASSWORD\"),\n  LOKI_HOST: getEnvironment(\"LOKI_HOST\"),\n  OTLP_TRACE_EXPORTER_URL: getEnvironment(\n    \"OTLP_TRACE_EXPORTER_URL\",\n    \"http://localhost:4318/v1/traces\"\n  ),\n  CRYPTO_YA_BASE_URL: getEnvironment(\"CRIPTO_YA_BASE_URL\"),\n  DECRYPTO_BASE_URL: getEnvironment(\"DECRYPTO_BASE_URL\"),\n  GOOGLE_API_BASE_URL: getEnvironment(\"GOOGLE_API_BASE_URL\"),\n  OKEX_BASE_URL: getEnvironment(\"OKEX_BASE_URL\"),\n  DISABLE_TRACE: getEnvironment(\"DISABLE_TRACE\"),\n};\n\nenvironment.LOCAL = !environment.GIT_SHA;\nenvironment.TEST = process.env.NODE_ENV === \"test\";\n\nexport function extendSharedEnvironment<T>(\n  packageEnvironment: T\n): typeof environment & T {\n  return { ...environment, ...packageEnvironment };\n}\n"]}
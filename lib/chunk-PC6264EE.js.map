{"version":3,"sources":["../src/utils/random.ts"],"names":["crypto","randomInt","min","max","Math","floor","random","generateRandomToken","buffer","randomBytes","createHash","update","digest","generateRandomSecret","generateRandomPassword","generateSha256Hash","value"],"mappings":";;;;;AAAA,OAAOA,YAAY;AAEZ,IAAMC,YAAY,wBAACC,MAAM,GAAGC,MAAM,QACvCC,KAAKC,MAAMD,KAAKE,OAAM,KAAMH,MAAMD,OAAOA,GAAAA,GADlB;AAGlB,IAAMK,sBAAsB,6BAAM;AACvC,QAAMC,SAASR,OAAOS,YAAY,GAAA;AAClC,SAAOT,OAAOU,WAAW,MAAA,EAAQC,OAAOH,MAAAA,EAAQI,OAAO,KAAA;AACzD,GAHmC;AAK5B,IAAMC,uBAAuB,6BAAM;AACxC,QAAML,SAASR,OAAOS,YAAY,GAAA;AAClC,SAAOT,OAAOU,WAAW,QAAA,EAAUC,OAAOH,MAAAA,EAAQI,OAAO,KAAA;AAC3D,GAHoC;AAK7B,IAAME,yBAAyB,6BAAM;AAC1C,QAAMN,SAASR,OAAOS,YAAY,GAAA;AAClC,SAAOT,OAAOU,WAAW,QAAA,EAAUC,OAAOH,MAAAA,EAAQI,OAAO,QAAA;AAC3D,GAHsC;AAK/B,IAAMG,qBAAqB,wBAACC,UAAkB;AACnD,SAAOhB,OAAOU,WAAW,QAAA,EAAUC,OAAOK,KAAAA,EAAOJ,OAAO,QAAA;AAC1D,GAFkC","sourcesContent":["import crypto from \"crypto\";\n\nexport const randomInt = (min = 1, max = 1000) =>\n  Math.floor(Math.random() * (max - min) + min);\n\nexport const generateRandomToken = () => {\n  const buffer = crypto.randomBytes(256);\n  return crypto.createHash(\"sha1\").update(buffer).digest(\"hex\");\n};\n\nexport const generateRandomSecret = () => {\n  const buffer = crypto.randomBytes(256);\n  return crypto.createHash(\"sha256\").update(buffer).digest(\"hex\");\n};\n\nexport const generateRandomPassword = () => {\n  const buffer = crypto.randomBytes(256);\n  return crypto.createHash(\"sha256\").update(buffer).digest(\"base64\");\n};\n\nexport const generateSha256Hash = (value: string) => {\n  return crypto.createHash(\"sha256\").update(value).digest(\"base64\");\n};\n"]}
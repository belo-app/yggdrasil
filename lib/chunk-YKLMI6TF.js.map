{"version":3,"sources":["../src/utils/combination.ts"],"names":["combinations","values","mapper","a","b","result","value1","index","indexOf","value2","slice","push"],"mappings":";;;;;AAAO,SAASA,aACdC,QACAC,SAAyC,CAACC,GAAGC,MAAM;EAACD;EAAGC;GAC7C;AACV,QAAMC,SAAmB,CAAA;AACzB,aAAWC,UAAUL,QAAQ;AAC3B,UAAMM,QAAQN,OAAOO,QAAQF,MAAAA,IAAU;AACvC,eAAWG,UAAUR,OAAOS,MAAMH,KAAAA,GAAQ;AACxCF,aAAOM,KAAKT,OAAOI,QAAQG,MAAAA,CAAAA;IAC7B;EACF;AACA,SAAOJ;AACT;AAZgBL","sourcesContent":["export function combinations<Input, Output = [Input, Input]>(\n  values: Input[],\n  mapper: (a: Input, b: Input) => Output = (a, b) => [a, b] as Output\n): Output[] {\n  const result: Output[] = [];\n  for (const value1 of values) {\n    const index = values.indexOf(value1) + 1;\n    for (const value2 of values.slice(index)) {\n      result.push(mapper(value1, value2));\n    }\n  }\n  return result;\n}\n"]}
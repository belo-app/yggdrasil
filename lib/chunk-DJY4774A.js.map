{"version":3,"sources":["../src/utils/validate.ts"],"names":["s","isTrueValidation","refine","boolean","value","isFalseValidation","streetNumberValidation","string","test","length","isNullOrOptional","shape","optional","nullable","intRegex","isStringInt","define"],"mappings":";;;;;AAAA,YAAYA,OAAO;AAEZ,IAAMC,mBAAqBC,SAC9BC,UAAO,GACT,oBACA,CAACC,UAAUA,UAAU,IAAI;AAGpB,IAAMC,oBAAsBH,SAC/BC,UAAO,GACT,oBACA,CAACC,UAAUA,UAAU,KAAK;AAGrB,IAAME,yBAA2BJ,SACpCK,SAAM,GACR,0BACA,CAACH,UAAU;AACT,SAAO,YAAYI,KAAKJ,KAAAA,KAAUA,MAAMK,SAAS;AACnD,CAAA;AAGK,SAASC,iBAAiBC,OAA2B;AAC1D,SAASC,WAAWC,WAASF,KAAAA,CAAAA;AAC/B;AAFgBD;AAGT,IAAMI,WAAW;AAEjB,IAAMC,cAAgBC,SAAO,aAAa,CAACZ,UAChDU,SAASN,KAAKJ,KAAAA,CAAAA","sourcesContent":["import * as s from \"superstruct\";\n\nexport const isTrueValidation = s.refine(\n  s.boolean(),\n  \"isTrueValidation\",\n  (value) => value === true\n);\n\nexport const isFalseValidation = s.refine(\n  s.boolean(),\n  \"isTrueValidation\",\n  (value) => value === false\n);\n\nexport const streetNumberValidation = s.refine(\n  s.string(),\n  \"streetNumberValidation\",\n  (value) => {\n    return /^\\d{1,5}$/.test(value) || value.length > 0;\n  }\n);\n\nexport function isNullOrOptional(shape: s.Struct<any, any>) {\n  return s.optional(s.nullable(shape));\n}\nexport const intRegex = /^\\d+$/;\n\nexport const isStringInt = s.define(\"stringInt\", (value: any) =>\n  intRegex.test(value)\n);\n"]}
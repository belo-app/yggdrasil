{"version":3,"sources":["../src/utils/bigquery.ts"],"names":["BigQuery","memoize","BigQueryClient","canUse","environment","LOCAL","BIGQUERY_CREDENTIALS","get","credentials","JSON","parse","projectId","client_email","private_key","bigQuery"],"mappings":";;;;;;;;AAAA,SAASA,gBAAgB;AACzB,OAAOC,aAAa;AAIpB,IAAMC,iBAAN,6BAAMA,gBAAAA;EACGC,SAAS,CAACC,YAAYC,SAASD,YAAYE;EAE3CC,MAAMN,QAAQ,MAAM;AACzB,QAAI,CAAC,KAAKE,QAAQ;AAChB;IACF;AAEA,QAAI;AACF,YAAMK,cAAcC,KAAKC,MAAMN,YAAYE,oBAAoB;AAE/D,aAAO,IAAIN,SAAS;QAClBW,WAAW;QACXH,aAAa;UACXI,cAAcJ,YAAYI;UAC1BC,aAAaL,YAAYK;QAC3B;MACF,CAAA;IACF,QAAE;IAEF;EACF,CAAA;AACF,GAtBA;AAwBO,IAAMC,WAAW,IAAIZ,eAAAA","sourcesContent":["import { BigQuery } from \"@google-cloud/bigquery\";\nimport memoize from \"memoizee\";\n\nimport { environment } from \"./environment\";\n\nclass BigQueryClient {\n  public canUse = !environment.LOCAL && environment.BIGQUERY_CREDENTIALS;\n\n  public get = memoize(() => {\n    if (!this.canUse) {\n      return;\n    }\n\n    try {\n      const credentials = JSON.parse(environment.BIGQUERY_CREDENTIALS);\n\n      return new BigQuery({\n        projectId: \"belo-8310\",\n        credentials: {\n          client_email: credentials.client_email,\n          private_key: credentials.private_key,\n        },\n      });\n    } catch {\n      //\n    }\n  });\n}\n\nexport const bigQuery = new BigQueryClient();\n"]}
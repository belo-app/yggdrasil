{"version":3,"sources":["../src/utils/concurrent.ts"],"names":["pMap","concurrent","input","mapper","options","concurrency"],"mappings":";;;;;AAAA,OAAOA,UAAU;AAOV,SAASC,WACdC,OACAC,QACAC,SAC2B;AAC3B,SAAOJ,KAAKE,OAAOC,QAAe;IAAEE,aAAa;IAAG,GAAGD;EAAQ,CAAA;AACjE;AANgBH","sourcesContent":["import pMap from \"p-map\";\n\ntype Mapper<Element = any, NewElement = any> = (\n  input: Element,\n  index: number\n) => NewElement | Promise<NewElement> | PromiseLike<NewElement>;\n\nexport function concurrent<Element, NewElement>(\n  input: Iterable<Element>,\n  mapper: Mapper<Element, NewElement>,\n  options?: pMap.Options\n): PromiseLike<NewElement[]> {\n  return pMap(input, mapper as any, { concurrency: 5, ...options });\n}\n"]}
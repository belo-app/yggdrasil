{"version":3,"sources":["../src/utils/objects.ts"],"names":["removeUndefinedValues","object_","Object","keys","reduce","object","key","undefined","removeFalsyValues","replaceElement","newElement","condition","map","value","mergeArrays","objectA","objectB","find","element"],"mappings":";;;;;AAAO,SAASA,sBACdC,SACG;AACH,SAAOC,OAAOC,KAAKF,OAAAA,EAASG,OAC1B,CAACC,QAAQC,QACPL,QAAQK,SAASC,SAAY;IAAE,GAAGF;IAAQ,CAACC,MAAML,QAAQK;EAAK,IAAID,QACpE,CAAC,CAAA;AAEL;AARgBL;AAUT,SAASQ,kBAAkBP,SAA2B;AAC3D,SAAOC,OAAOC,KAAKF,OAAAA,EAASG,OAC1B,CAACC,QAAQC,QACPL,QAAQK,OAAO;IAAE,GAAGD;IAAQ,CAACC,MAAML,QAAQK;EAAK,IAAID,QACtD,CAAC,CAAA;AAEL;AANgBG;AAQT,SAASC,eACdJ,QACAK,YACAC,WACA;AACA,SAAON,OAAOO,IAAI,CAACC,UACjBF,UAAUE,OAAOH,UAAAA,IAAcA,aAAaG,KAAK;AAErD;AARgBJ;AAUT,SAASK,YACdC,SACAC,SACAL,WACA;AACA,SAAOI,QAAQH,IAAI,CAACC,UAAgB;AAClC,UAAMH,aAAaM,QAAQC,KAAK,CAACC,YAC/BP,UAAUO,SAASL,KAAAA,CAAAA;AAErB,WAAOH,cAAcG;EACvB,CAAA;AACF;AAXgBC","sourcesContent":["export function removeUndefinedValues<T extends Record<any, any>>(\n  object_: Partial<T>\n): T {\n  return Object.keys(object_).reduce(\n    (object, key) =>\n      object_[key] !== undefined ? { ...object, [key]: object_[key] } : object,\n    {}\n  ) as T;\n}\n\nexport function removeFalsyValues(object_: Record<any, any>) {\n  return Object.keys(object_).reduce(\n    (object, key) =>\n      object_[key] ? { ...object, [key]: object_[key] } : object,\n    {}\n  );\n}\n\nexport function replaceElement<Type>(\n  object: Type[],\n  newElement: Type,\n  condition: (a: Type, b: Type) => boolean\n) {\n  return object.map((value: Type) =>\n    condition(value, newElement) ? newElement : value\n  );\n}\n\nexport function mergeArrays<Type>(\n  objectA: Type[],\n  objectB: Type[],\n  condition: (a: Type, b: Type) => boolean\n) {\n  return objectA.map((value: Type) => {\n    const newElement = objectB.find((element: Type) =>\n      condition(element, value)\n    );\n    return newElement ?? value;\n  });\n}\n"]}
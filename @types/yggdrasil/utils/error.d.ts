export declare enum HttpStatusCode {
    BAD_REQUEST = 400,
    UNAUTHORIZED = 401,
    FORBIDDEN = 403,
    NOT_FOUND = 404,
    TIMEOUT = 408,
    CONFLICT = 409,
    TOO_MANY_REQUESTS = 429,
    INTERNAL_SERVER_ERROR = 500
}
export declare class ServerError extends Error {
    name: string;
    description: string;
    data: Record<string, any>;
    statusCode: HttpStatusCode;
    constructor(name: string, description?: string, data?: Record<string, any>, statusCode?: HttpStatusCode);
}
export declare enum ErrorType {
    notImplemented = "NOT_IMPLEMENTED",
    invalidCountry = "INVALID_COUNTRY",
    invalidService = "SERVICE_NOT_ALLOW",
    userNotFound = "USER_NOT_FOUND",
    invalidSameUser = "INVALID_SAME_USER",
    invalidCard = "INVALID_CARD",
    cardNotFound = "CARD_NOT_FOUND",
    invalidShipment = "INVALID_SHIPMENT",
    invalidMaxVirtualCard = "INVALID_MAX_VIRTUAL_CARDS",
    invalidPinCard = "INVALID_PIN_CARD",
    invalidSamePinCard = "INVALID_SAME_PIN_CARD",
    invalidCardType = "INVALID_CARD_TYPE",
    invalidPaymentCreateCard = "INVALID_PAYMENT_CREATE_CARD",
    invalidAlreadyHasCard = "INVALID_ALREADY_HAS_CARD",
    invalidCardAddress = "INVALID_CARD_ADDRESS",
    invalidCardUserData = "INVALID_CARD_USER_DATA",
    duplicateCardUser = "INVALID_DUPLICATE_USER",
    invalidCardRequest = "INVALID_CARD_REQUEST",
    unauthorized = "UNAUTHORIZED",
    invalidParameter = "INVALID_PARAMETER",
    invalidEmail = "INVALID_EMAIL",
    invalidTotp = "INVALID_TOTP",
    totpAlreadyExists = "TOTP_ALREADY_EXISTS",
    invalidBelotag = "INVALID_BELOTAG",
    invalidOwner = "INVALID_OWNER",
    invalidCurrency = "INVALID_CURRENCY",
    invalidAddressType = "INVALID_ADDRESS_TYPE",
    invalidAddress = "INVALID_ADDRESS",
    invalidTransaction = "INVALID_TRANSACTION",
    invalidAmount = "INVALID_AMOUNT",
    walletLimitSurpassed = "WALLET_LIMIT_SURPASSED",
    swapDailyLimitSurpassed = "SWAP_DAILY_LIMIT_SURPASSED",
    swapMonthlyLimitSurpassed = "SWAP_MONTHLY_LIMIT_SURPASSED",
    swapYearlyLimitSurpassed = "SWAP_YEARLY_LIMIT_SURPASSED",
    withdrawalDailyLimitSurpassed = "WITHDRAWAL_DAILY_LIMIT_SURPASSED",
    withdrawalMonthlyLimitSurpassed = "WITHDRAWAL_MONTHLY_LIMIT_SURPASSED",
    withdrawalYearlyLimitSurpassed = "WITHDRAWAL_YEARLY_LIMIT_SURPASSED",
    cardDailyLimitSurpassed = "CARD_DAILY_LIMIT_SURPASSED",
    cardMonthlyLimitSurpassed = "CARD_MONTHLY_LIMIT_SURPASSED",
    cardYearlyLimitSurpassed = "CARD_YEARLY_LIMIT_SURPASSED",
    invalidQuote = "INVALID_QUOTE",
    invalidPair = "INVALID_PAIR",
    invalidUser = "INVALID_USER",
    invalidUserData = "INVALID_USER_DATA",
    invalidWallet = "INVALID_WALLET",
    invalidQuantiaPair = "INVALID_QUANTIA_PAIR",
    invalidQuantiaCurrency = "INVALID_QUANTIA_CURRENCY",
    invalidQuantiaFunds = "INVALID_QUANTIA_FUNDS",
    invalidOkexCurrency = "INVALID_OKEX_CURRENCY",
    invalidOkexFee = "INVALID_OKEX_FEE",
    invalidWithdrawal = "INVALID_WITHDRAWAL",
    invalidContact = "INVALID_CONTACT",
    okexError = "OKEX_ERROR",
    noOtcLiquidity = "NO_OTC_LIQUIDITY",
    invalidPayment = "INVALID_PAYMENT",
    invalidOperation = "INVALID_OPERATION",
    incompleteUser = "INCOMPLETE_USER",
    invalidIdentityDocumentBadText = "INVALID_IDENTITY_DOCUMENT_BAD_TEXT",
    invalidIdentityDocumentBlurryText = "INVALID_IDENTITY_DOCUMENT_BLURRY_TEXT",
    invalidIdentityDocumentSmallImageSize = "INVALID_IDENTITY_DOCUMENT_SMALL_IMAGE_SIZE",
    invalidIdentityDocumentUnexpectedData = "INVALID_IDENTITY_DOCUMENT_UNEXPECTED_DATA",
    invalidIdentityDocumentNoText = "INVALID_IDENTITY_DOCUMENT_NO_TEXT",
    invalidIdentityDocumentNoFace = "INVALID_IDENTITY_DOCUMENT_NO_FACE",
    invalidIdentityDocumentIdenticalImage = "INVALID_IDENTITY_DOCUMENT_IDENTICAL_IMAGE",
    invalidIdentityDocumentSimilarImage = "INVALID_IDENTITY_DOCUMENT_SIMILAR_IMAGE",
    invalidIdentityDocumentGrayscaleImage = "INVALID_IDENTITY_DOCUMENT_GRAYSCALE_IMAGE",
    invalidIdentityDocumentScreenPhoto = "INVALID_IDENTITY_DOCUMENT_SCREEN_PHOTO",
    invalidIdentityDocumentNoDocument = "INVALID_IDENTITY_DOCUMENT_NO_DOCUMENT",
    invalidIdentityDocumentMissingFields = "INVALID_IDENTITY_DOCUMENT_MISSING_FIELDS",
    invalidIdentityDocumentWrongFormat = "INVALID_IDENTITY_DOCUMENT_WRONG_FORMAT",
    invalidIdentityDocumentNoMrz = "INVALID_IDENTITY_DOCUMENT_NO_MRZ",
    invalidIdentityDocumentBadMrz = "INVALID_IDENTITY_DOCUMENT_BAD_MRZ",
    invalidIdentityDocumentNoPdf417 = "INVALID_IDENTITY_DOCUMENT_NO_PDF_417",
    invalidIdentityDocumentBadPdf417 = "INVALID_IDENTITY_DOCUMENT_BAD_PDF_417",
    invalidIdentityDocumentTypeMismatch = "INVALID_IDENTITY_DOCUMENT_TYPE_MISMATCH",
    invalidIdentityDocumentCountryMismatch = "INVALID_IDENTITY_DOCUMENT_COUNTRY_MISMATCH",
    invalidIdentityVideoConversionFailed = "INVALID_IDENTITY_VIDEO_CONVERSION_FAILED",
    invalidIdentityVideoMultipleFaces = "INVALID_IDENTITY_VIDEO_MULTIPLE_FACES",
    invalidIdentityVideoNoFace = "INVALID_IDENTITY_VIDEO_MULTIPLE_FACES",
    invalidIdentityInput = "INVALID_IDENTITY_INPUT",
    invalidIdentityDocumentType = "INVALID_IDENTITY_DOCUMENT_TYPE",
    invalidWebhook = "INVALID_WEBHOOK",
    invalidAliasFormat = "INVALID_ALIAS_FORMAT",
    aliasNotAvailable = "ALIAS_NOT_AVAILABLE",
    hasNotMainAddress = "HAS_NOT_MAIN_ADDRESS",
    invalidProvider = "INVALID_PROVIDER",
    invalidPayload = "INVALID_PAYLOAD",
    invalidCustomer = "INVALID_CUSTOMER",
    inactiveCard = "CARD_INACTIVE",
    serviceNotAvailable = "SERVICE_NOT_AVAILABLE",
    rechargeNotAvailable = "RECHARGE_NOT_AVAILABLE",
    invalidCampaign = "INVALID_CAMPAIGN",
    duplicatedDcaConfig = "DUPLICATED_DCA_CONFIG",
    invalidQrNotAvailable = "INVALID_QR_NOT_AVAILABLE",
    invalidQrUnsupported = "INVALID_QR_UNSUPPORTED",
    invalidQrMerchant = "INVALID_QR_MERCHANT",
    invalidQrError = "INVALID_QR_ERROR",
    unableRedactUser = "UNABLE_REDACT_USER",
    invalidCardAuthorization = "INVALID_CARD_AUTHORIZATION",
    invalidClient = "INVALID_CLIENT",
    invalidCredentials = "INVALID_CREDENTIALS",
    invalidUUID = "INVALID_UUID",
    invalidRegistration = "INVALID_REGISTRATION",
    invalidEntityType = "INVALID_ENTITY_TYPE",
    invalidEntity = "INVALID_ENTITY",
    tooManyRequests = "TOO_MANY_REQUESTS",
    expired = "EXPIRED",
    forbidden = "FORBIDDEN",
    notAuthorized = "NOT_AUTHORIZED",
    invalidMFAValidationCode = "INVALID_MFA_VALIDATION_CODE",
    invalidMFACode = "INVALID_MFA_CODE",
    mfaMethodAlreadyActivate = "MFA_METHOD_ALREADY_ACTIVATE",
    invalidMFAMethod = "INVALID_MFA_METHOD",
    invalidMFAVerification = "INVALID_MFA_VERIFICATION",
    backoffFailed = "BACKOFF_FAILED",
    badRequest = "BAD_REQUEST",
    invalidPrice = "INVALID_PRICE",
    invalidApplication = "INVALID_APPLICATION",
    invalidEmployee = "INVALID_EMPLOYEE",
    accountDeleted = "ACCOUNT_DELETED",
    invalidPermission = "INVALID_PERMISSION",
    invalidPermissionGroup = "INVALID_PERMISSION_GROUP",
    mfaRequired = "MFA_REQUIRED",
    mfaFactorIdExpired = "MFA_FACTOR_ID_EXPIRED",
    userLocked = "USER_LOCKED",
    invalidBulkOperation = "INVALID_BULK_OPERATION",
    notFound = "NOT_FOUND",
    missingParameter = "MISSING_PARAMETER",
    unknownError = "UNKNOWN_ERROR",
    invalidMerchant = "INVALID_MERCHANT",
    remainingBalance = "REMAINING_BALANCE",
    paymentAlreadyProcessed = "PAYMENT_ALREADY_PROCESSED",
    paymentFailed = "PAYMENT_FAILED",
    tooEarly = "TOO_EARLY",
    lockCouldNotAcquireKeys = "LOCK_COULD_NOT_ACQUIRE_KEYS",
    companyNotFound = "COMPANY_NOT_FOUND",
    paymentNotFound = "PAYMENT_NOT_FOUND",
    invalidVersionHeader = "INVALID_VERSION_HEADER",
    updateRequired = "UPDATE_REQUIRED",
    invalidRateInvestment = "INVALID_RATE_INVESTMENT",
    invalidPhoneNumber = "INVALID_PHONE_NUMBER",
    invalidBillAmount = "INVALID_BILL_AMOUNT",
    invalidBillCompany = "INVALID_BILL_COMPANY",
    invalidBillExpired = "INVALID_BILL_EXPIRED",
    productNotFound = "PRODUCT_NOT_FOUND",
    invalidBillIdentifier = "INVALID_BILL_IDENTIFIER",
    debtIdExpired = "DEBT_ID_EXPIRED",
    invalidUserType = "INVALID_USER_TYPE",
    invalidCronTime = "INVALID_CRON_TIME"
}
export type ErrorName = keyof typeof ErrorType;
type ErrorHandler = (description?: string, data?: Record<string, any>) => ServerError;
export declare const Errors: Record<"notImplemented" | "invalidCountry" | "invalidService" | "userNotFound" | "invalidSameUser" | "invalidCard" | "cardNotFound" | "invalidShipment" | "invalidMaxVirtualCard" | "invalidPinCard" | "invalidSamePinCard" | "invalidCardType" | "invalidPaymentCreateCard" | "invalidAlreadyHasCard" | "invalidCardAddress" | "invalidCardUserData" | "duplicateCardUser" | "invalidCardRequest" | "unauthorized" | "invalidParameter" | "invalidEmail" | "invalidTotp" | "totpAlreadyExists" | "invalidBelotag" | "invalidOwner" | "invalidCurrency" | "invalidAddressType" | "invalidAddress" | "invalidTransaction" | "invalidAmount" | "walletLimitSurpassed" | "swapDailyLimitSurpassed" | "swapMonthlyLimitSurpassed" | "swapYearlyLimitSurpassed" | "withdrawalDailyLimitSurpassed" | "withdrawalMonthlyLimitSurpassed" | "withdrawalYearlyLimitSurpassed" | "cardDailyLimitSurpassed" | "cardMonthlyLimitSurpassed" | "cardYearlyLimitSurpassed" | "invalidQuote" | "invalidPair" | "invalidUser" | "invalidUserData" | "invalidWallet" | "invalidQuantiaPair" | "invalidQuantiaCurrency" | "invalidQuantiaFunds" | "invalidOkexCurrency" | "invalidOkexFee" | "invalidWithdrawal" | "invalidContact" | "okexError" | "noOtcLiquidity" | "invalidPayment" | "invalidOperation" | "incompleteUser" | "invalidIdentityDocumentBadText" | "invalidIdentityDocumentBlurryText" | "invalidIdentityDocumentSmallImageSize" | "invalidIdentityDocumentUnexpectedData" | "invalidIdentityDocumentNoText" | "invalidIdentityDocumentNoFace" | "invalidIdentityDocumentIdenticalImage" | "invalidIdentityDocumentSimilarImage" | "invalidIdentityDocumentGrayscaleImage" | "invalidIdentityDocumentScreenPhoto" | "invalidIdentityDocumentNoDocument" | "invalidIdentityDocumentMissingFields" | "invalidIdentityDocumentWrongFormat" | "invalidIdentityDocumentNoMrz" | "invalidIdentityDocumentBadMrz" | "invalidIdentityDocumentNoPdf417" | "invalidIdentityDocumentBadPdf417" | "invalidIdentityDocumentTypeMismatch" | "invalidIdentityDocumentCountryMismatch" | "invalidIdentityVideoConversionFailed" | "invalidIdentityVideoMultipleFaces" | "invalidIdentityVideoNoFace" | "invalidIdentityInput" | "invalidIdentityDocumentType" | "invalidWebhook" | "invalidAliasFormat" | "aliasNotAvailable" | "hasNotMainAddress" | "invalidProvider" | "invalidPayload" | "invalidCustomer" | "inactiveCard" | "serviceNotAvailable" | "rechargeNotAvailable" | "invalidCampaign" | "duplicatedDcaConfig" | "invalidQrNotAvailable" | "invalidQrUnsupported" | "invalidQrMerchant" | "invalidQrError" | "unableRedactUser" | "invalidCardAuthorization" | "invalidClient" | "invalidCredentials" | "invalidUUID" | "invalidRegistration" | "invalidEntityType" | "invalidEntity" | "tooManyRequests" | "expired" | "forbidden" | "notAuthorized" | "invalidMFAValidationCode" | "invalidMFACode" | "mfaMethodAlreadyActivate" | "invalidMFAMethod" | "invalidMFAVerification" | "backoffFailed" | "badRequest" | "invalidPrice" | "invalidApplication" | "invalidEmployee" | "accountDeleted" | "invalidPermission" | "invalidPermissionGroup" | "mfaRequired" | "mfaFactorIdExpired" | "userLocked" | "invalidBulkOperation" | "notFound" | "missingParameter" | "unknownError" | "invalidMerchant" | "remainingBalance" | "paymentAlreadyProcessed" | "paymentFailed" | "tooEarly" | "lockCouldNotAcquireKeys" | "companyNotFound" | "paymentNotFound" | "invalidVersionHeader" | "updateRequired" | "invalidRateInvestment" | "invalidPhoneNumber" | "invalidBillAmount" | "invalidBillCompany" | "invalidBillExpired" | "productNotFound" | "invalidBillIdentifier" | "debtIdExpired" | "invalidUserType" | "invalidCronTime", ErrorHandler>;
export declare const isKnownError: (name: string) => boolean;
export {};
//# sourceMappingURL=error.d.ts.map